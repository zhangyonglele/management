<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lib.management.mapper.BookInfoMapper" >
  <resultMap id="BaseResultMap" type="com.lib.management.model.BookInfo" >
    <id column="book_info_id" property="bookInfoId" jdbcType="INTEGER" />
    <result column="book_type" property="bookType" jdbcType="INTEGER" />
    <result column="book_type_code" property="bookTypeCode" jdbcType="INTEGER" />
    <result column="book_name" property="bookName" jdbcType="VARCHAR" />
    <result column="book_price" property="bookPrice" jdbcType="VARCHAR" />
    <result column="book_author" property="bookAuthor" jdbcType="VARCHAR" />
    <result column="book_publisher" property="bookPublisher" jdbcType="VARCHAR" />
    <result column="create_by" property="createBy" jdbcType="INTEGER" />
    <result column="book_copy_number" property="bookCopyNumber" jdbcType="INTEGER" />
    <result column="book_status" property="bookStatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    book_info_id, book_type, book_type_code, book_name, book_price, book_author, book_publisher, 
    create_by, book_copy_number, book_status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from book_info
    where book_info_id = #{bookInfoId,jdbcType=INTEGER}
  </select>

  <select id="getLastInsertId" resultType="java.lang.Integer">
    select last_insert_id()
  </select>

  <select id="selectByBookName" resultMap="BaseResultMap" parameterType="java.lang.String">
      select
      <include refid="Base_Column_List"/>
      from book_info
      where book_name = #{bookName,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from book_info
    where book_info_id = #{bookInfoId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lib.management.model.BookInfo" >
    insert into book_info (book_info_id, book_type, book_type_code, 
      book_name, book_price, book_author, 
      book_publisher, create_by, book_copy_number, 
      book_status)
    values (#{bookInfoId,jdbcType=INTEGER}, #{bookType,jdbcType=INTEGER}, #{bookTypeCode,jdbcType=INTEGER},
      #{bookName,jdbcType=VARCHAR}, #{bookPrice,jdbcType=VARCHAR}, #{bookAuthor,jdbcType=VARCHAR}, 
      #{bookPublisher,jdbcType=VARCHAR}, #{createBy,jdbcType=INTEGER}, #{bookCopyNumber,jdbcType=INTEGER}, 
      #{bookStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lib.management.model.BookInfo" >
    insert into book_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bookInfoId != null" >
        book_info_id,
      </if>
      <if test="bookType != null" >
        book_type,
      </if>
      <if test="bookTypeCode != null" >
        book_type_code,
      </if>
      <if test="bookName != null" >
        book_name,
      </if>
      <if test="bookPrice != null" >
        book_price,
      </if>
      <if test="bookAuthor != null" >
        book_author,
      </if>
      <if test="bookPublisher != null" >
        book_publisher,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="bookCopyNumber != null" >
        book_copy_number,
      </if>
      <if test="bookStatus != null" >
        book_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bookInfoId != null" >
        #{bookInfoId,jdbcType=INTEGER},
      </if>
      <if test="bookType != null" >
        #{bookType,jdbcType=VARCHAR},
      </if>
      <if test="bookTypeCode != null" >
        #{bookTypeCode,jdbcType=INTEGER},
      </if>
      <if test="bookName != null" >
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookPrice != null" >
        #{bookPrice,jdbcType=VARCHAR},
      </if>
      <if test="bookAuthor != null" >
        #{bookAuthor,jdbcType=VARCHAR},
      </if>
      <if test="bookPublisher != null" >
        #{bookPublisher,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="bookCopyNumber != null" >
        #{bookCopyNumber,jdbcType=INTEGER},
      </if>
      <if test="bookStatus != null" >
        #{bookStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lib.management.model.BookInfo" >
    update book_info
    <set >
      <if test="bookType != null" >
        book_type = #{bookType,jdbcType=INTEGER},
      </if>
      <if test="bookTypeCode != null" >
        book_type_code = #{bookTypeCode,jdbcType=INTEGER},
      </if>
      <if test="bookName != null" >
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookPrice != null" >
        book_price = #{bookPrice,jdbcType=VARCHAR},
      </if>
      <if test="bookAuthor != null" >
        book_author = #{bookAuthor,jdbcType=VARCHAR},
      </if>
      <if test="bookPublisher != null" >
        book_publisher = #{bookPublisher,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="bookCopyNumber != null" >
        book_copy_number = #{bookCopyNumber,jdbcType=INTEGER},
      </if>
      <if test="bookStatus != null" >
        book_status = #{bookStatus,jdbcType=INTEGER},
      </if>
    </set>
    where book_info_id = #{bookInfoId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lib.management.model.BookInfo" >
    update book_info
    set book_type = #{bookType,jdbcType=INTEGER},
      book_type_code = #{bookTypeCode,jdbcType=INTEGER},
      book_name = #{bookName,jdbcType=VARCHAR},
      book_price = #{bookPrice,jdbcType=VARCHAR},
      book_author = #{bookAuthor,jdbcType=VARCHAR},
      book_publisher = #{bookPublisher,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=INTEGER},
      book_copy_number = #{bookCopyNumber,jdbcType=INTEGER},
      book_status = #{bookStatus,jdbcType=INTEGER}
    where book_info_id = #{bookInfoId,jdbcType=INTEGER}
  </update>
  <update id="updateBookStatusById">
      update book_info
      set book_status = #{bookInfoStatus,jdbcType=INTEGER}
      where book_info_id = #{bookInfoId,jdbcType=INTEGER}
  </update>
</mapper>